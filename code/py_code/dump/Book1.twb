<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0321.1733                               -->
<workbook original-version='18.1' source-build='2019.1.2 (20191.19.0321.1733)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='data_3' inline='true' name='federated.01md5m6073w5xk1bm4gli1gsjd6e' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data_3' name='semistructpassivestore-direct.1pp49rb05vsxvn18xz1aj0i3xkp1'>
            <connection class='semistructpassivestore-direct' directory='C:/workspaces/SMDM/project/dump' filename='data_3.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[data_3.json]'>
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1pp49rb05vsxvn18xz1aj0i3xkp1' name='data_3.json' table='[data_3.json]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[data_3.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[data_3.json]</parent-name>
            <remote-alias>city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>confidence</remote-name>
            <remote-type>5</remote-type>
            <local-name>[confidence]</local-name>
            <parent-name>[data_3.json]</parent-name>
            <remote-alias>confidence</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[data_3.json]</parent-name>
            <remote-alias>country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[data_3.json]</parent-name>
            <remote-alias>country_code</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_time]</local-name>
            <parent-name>[data_3.json]</parent-name>
            <remote-alias>date_time</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>device_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[device_type]</local-name>
            <parent-name>[data_3.json]</parent-name>
            <remote-alias>device_type</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>followers_count</remote-name>
            <remote-type>5</remote-type>
            <local-name>[followers_count]</local-name>
            <parent-name>[data_3.json]</parent-name>
            <remote-alias>followers_count</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>party_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[party_name]</local-name>
            <parent-name>[data_3.json]</parent-name>
            <remote-alias>party_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>party_name_short</remote-name>
            <remote-type>130</remote-type>
            <local-name>[party_name_short]</local-name>
            <parent-name>[data_3.json]</parent-name>
            <remote-alias>party_name_short</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place</remote-name>
            <remote-type>130</remote-type>
            <local-name>[place]</local-name>
            <parent-name>[data_3.json]</parent-name>
            <remote-alias>place</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[place_latitude]</local-name>
            <parent-name>[data_3.json]</parent-name>
            <remote-alias>place_latitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>place_longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[place_longitude]</local-name>
            <parent-name>[data_3.json]</parent-name>
            <remote-alias>place_longitude</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>screen_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[screen_name]</local-name>
            <parent-name>[data_3.json]</parent-name>
            <remote-alias>screen_name</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sentiment_nb_str</remote-name>
            <remote-type>130</remote-type>
            <local-name>[sentiment_nb_str]</local-name>
            <parent-name>[data_3.json]</parent-name>
            <remote-alias>sentiment_nb_str</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tweet</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tweet]</local-name>
            <parent-name>[data_3.json]</parent-name>
            <remote-alias>tweet</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tweetID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tweetID]</local-name>
            <parent-name>[data_3.json]</parent-name>
            <remote-alias>tweetID</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Confidence' datatype='real' name='[confidence]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>confidence</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;bhaart&quot;' value='&quot;India&quot;' />
          <semantic-value key='&quot;pkhstn&quot;' value='&quot;Pakistan&quot;' />
        </semantic-values>
        <desc>
          <formatted-text>
            <run>country</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>country_code</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Date Time' datatype='string' name='[date_time]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>date_time</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device Type' datatype='string' name='[device_type]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>device_type</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Followers Count' datatype='real' name='[followers_count]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>followers_count</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Party Name' datatype='string' name='[party_name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>party_name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Party Name Short' datatype='string' name='[party_name_short]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>party_name_short</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Place' datatype='string' name='[place]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>place</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' caption='Place Latitude' datatype='real' name='[place_latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <desc>
          <formatted-text>
            <run>place_latitude</run>
          </formatted-text>
        </desc>
      </column>
      <column aggregation='Avg' caption='Place Longitude' datatype='real' name='[place_longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <desc>
          <formatted-text>
            <run>place_longitude</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Screen Name' datatype='string' name='[screen_name]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>screen_name</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Sentiment Nb Str' datatype='string' name='[sentiment_nb_str]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>sentiment_nb_str</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Tweet ID' datatype='string' name='[tweetID]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>tweetID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Tweet' datatype='string' name='[tweet]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>tweet</run>
          </formatted-text>
        </desc>
      </column>
      <column-instance column='[sentiment_nb_str]' derivation='None' name='[none:sentiment_nb_str:nk]' pivot='key' type='nominal' />
      <folder name='Data 3' role='dimensions'>
        <folder-item name='[Document Index (generated)]' type='field' />
        <folder-item name='[city]' type='field' />
        <folder-item name='[country]' type='field' />
        <folder-item name='[country_code]' type='field' />
        <folder-item name='[date_time]' type='field' />
        <folder-item name='[device_type]' type='field' />
        <folder-item name='[party_name]' type='field' />
        <folder-item name='[party_name_short]' type='field' />
        <folder-item name='[place]' type='field' />
        <folder-item name='[screen_name]' type='field' />
        <folder-item name='[sentiment_nb_str]' type='field' />
        <folder-item name='[tweetID]' type='field' />
        <folder-item name='[tweet]' type='field' />
      </folder>
      <layout dim-ordering='alphabetic' dim-percentage='0.622973' measure-ordering='alphabetic' measure-percentage='0.377027' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:sentiment_nb_str:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;pos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;neu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;neg&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{6CCA0131-ABDB-4FB4-9BF1-6BB62FE69CC9}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Sentiment Analysis</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data_3' name='federated.01md5m6073w5xk1bm4gli1gsjd6e' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01md5m6073w5xk1bm4gli1gsjd6e'>
            <column-instance column='[party_name]' derivation='None' name='[none:party_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[place_latitude]' derivation='None' name='[none:place_latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[place_longitude]' derivation='None' name='[none:place_longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[sentiment_nb_str]' derivation='None' name='[none:sentiment_nb_str:nk]' pivot='key' type='nominal' />
            <column caption='Party Name' datatype='string' name='[party_name]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>party_name</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Avg' caption='Place Latitude' datatype='real' name='[place_latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>place_latitude</run>
                </formatted-text>
              </desc>
            </column>
            <column aggregation='Avg' caption='Place Longitude' datatype='real' name='[place_longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative'>
              <desc>
                <formatted-text>
                  <run>place_longitude</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Sentiment Nb Str' datatype='string' name='[sentiment_nb_str]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>sentiment_nb_str</run>
                </formatted-text>
              </desc>
            </column>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01md5m6073w5xk1bm4gli1gsjd6e].[none:sentiment_nb_str:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01md5m6073w5xk1bm4gli1gsjd6e].[none:place_latitude:qk]</rows>
        <cols>([federated.01md5m6073w5xk1bm4gli1gsjd6e].[none:party_name:nk] * [federated.01md5m6073w5xk1bm4gli1gsjd6e].[none:place_longitude:qk])</cols>
      </table>
      <simple-id uuid='{64CE5C9A-D729-4D73-8591-7BA1C44EFF48}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3D5848F0-17AF-4CF9-B1B0-FAE5CA1AE7A6}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01md5m6073w5xk1bm4gli1gsjd6e].[none:sentiment_nb_str:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01md5m6073w5xk1bm4gli1gsjd6e].[none:country:nk]</field>
            <field>[federated.01md5m6073w5xk1bm4gli1gsjd6e].[none:party_name:nk]</field>
            <field>[federated.01md5m6073w5xk1bm4gli1gsjd6e].[none:place:nk]</field>
            <field>[federated.01md5m6073w5xk1bm4gli1gsjd6e].[none:place_latitude:qk]</field>
            <field>[federated.01md5m6073w5xk1bm4gli1gsjd6e].[none:place_longitude:qk]</field>
            <field>[federated.01md5m6073w5xk1bm4gli1gsjd6e].[none:sentiment_nb_str:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{96309715-F24D-4390-9E05-EF4B3461A1B8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
